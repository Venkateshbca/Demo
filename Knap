#include<stdio.h>
#include<stdlib.h>
#define MAX_ITEMS 100
int compare(const void *a,const void *b)
{
    double ratioA=((int*)a)[0]/(double)((int*)a)[1];
    double ratioB=((int*)b)[0]/(double)((int*)b)[1];
    return(ratioB>ratioA)-(ratioB<ratioA);
}
double knapsackGreedy(int items[][2],int n,int capacity)
{
    qsort(items,n,sizeof(items[0]),compare);
    double totalValue=0.0;
    int currentWeight=0;
    for(int i=0;i<n;i++)
    {
        if(currentWeight+items[i][1]<=capacity)
        {
            totalValue+=items[i][0];
            currentWeight+=items[i][1];
        }
        else
        {
            double remainingWeight=capacity-currentWeight;
            totalValue+=(remainingWeight/items[i][1])*items[i][0];
            break;
        }
    }
    return totalValue;
}
int main()
{

    int n,capacity;
    printf("entr the number of items:");
    scanf("%d",&n);
    printf("enter the knapsack capacity:");
    scanf("%d",&capacity);

    int items[MAX_ITEMS][2];
    printf("enter the values and weights for each item:\n");
    for(int i=0;i<n;i++)
    {
        scanf("%d%d",&items[i][0],&items[i][1]);
    }
    double result=knapsackGreedy(items,n,capacity);
    printf("maximum value in the knapsack using Greedy approach:%2f\n",result);
    return 0;
}
